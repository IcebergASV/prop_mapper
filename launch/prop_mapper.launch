<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!--Launch file for real life-->

  <!-- Arguments -->
  <arg name="use_mock_angle_finder" default="false"/>
  <arg name="record_rosbag" default="true"/>

  <!-- Nodes -->

  <!-- Uncomment for Nav Channel mock angle finder, and comment out fake_angle_finder -->
  <!--node name="mock_angle_finder_nav_channel" pkg="prop_mapper" type="mock_angle_finder_nav_channel" output="screen" if="$(arg use_nav_channel_mock_angle_finder)">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node-->

  <node name="fake_angle_finder" pkg="prop_mapper" type="fake_angle_finder" output="screen" if="$(arg use_mock_angle_finder)">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node>

  <node name="angle_finder" pkg="prop_mapper" type="angle_finder" output="screen" unless="$(arg use_mock_angle_finder)">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node>

  <node name="distance_finder" pkg="prop_mapper" type="distance_finder" output="screen">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node>

  <node name="coord_finder" pkg="prop_mapper" type="coord_finder" output="screen">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node>

  <node name="prop_map" pkg="prop_mapper" type="prop_map" output="screen">
    <rosparam file="$(find prop_mapper)/config/params.yaml" command="load" />
  </node>

  <node pkg="rosbag" type="record" name="iceberg" if="$(arg record_rosbag)"
          args="record -o /home/icebergasv/roboboat_2024/rosbags/iceberg_code 
              /completed_props
              /prop_angle_range
              /prop_array
              /prop_polar_coords
              ">
  </node>

</launch>